// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Use environment variables instead of hardcoded credentials
const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL || "";
const SUPABASE_ANON_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || "";

// Validate environment variables
if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
  console.error(
    "Missing Supabase environment variables. Please check your .env file."
  );
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    storage: typeof window !== 'undefined' ? localStorage : undefined
  }
});

// Uncomment if you need to create a storage bucket for questions
/*
const createQuestionsBucket = async () => {
  try {
    const { data: buckets } = await supabase.storage.listBuckets();
    const questionsBucketExists = buckets?.some(bucket => bucket.name === 'questions');
    
    if (!questionsBucketExists) {
      console.log("Creating questions bucket for image storage");
      await supabase.storage.createBucket('questions', {
        public: true, // Make it public so images can be accessed without auth
        fileSizeLimit: 5242880, // 5MB
      });
    }
  } catch (error) {
    console.error("Error checking/creating questions bucket:", error);
  }
};

createQuestionsBucket();
*/

console.log("Supabase client initialized");

export default supabase;